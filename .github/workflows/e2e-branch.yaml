name: E2E test branch
on:
  workflow_call:
    secrets:
      GKE_CREDENTIALS:
        description: "GKE credentials"
      GKE_PROJECT_ID:
        description: "GKE project ID"
      SLACK_WEBHOOK_URL:
        description: "WebHook URL to use for Slack"
        required: true
    inputs:
      branch:
        type: string
        default: "release-v2.9"

env:
  GKE_CREDENTIALS: ${{ secrets.GKE_CREDENTIALS }}
  GKE_PROJECT_ID: ${{ secrets.GKE_PROJECT_ID }}

jobs:
  e2e-tests:
    env:
      BRANCH: ${{ inputs.branch }}
      REPO: ttl.sh/gke-operator-ci
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          ref: |
            ${{ env.BRANCH }}
      - name: Export tag
        id: export_tag
        run: |
          TAG="v0.0.0"
          COMMITDATE=`date -d @$(git log -n1 --format="%at") "+%FT%TZ"`
          COMMIT=`git rev-parse HEAD`
          COMMIT_SHORT=`git rev-parse --short HEAD`
          echo "operator_tag=$TAG" >> $GITHUB_OUTPUT
          echo "commit_date=$COMMITDATE" >> $GITHUB_OUTPUT
          echo "commit=$COMMIT" >> $GITHUB_OUTPUT
          echo "commit_short=$COMMIT_SHORT" >> $GITHUB_OUTPUT
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@8e5442c4ef9f78752691e2d8f8d19755c6f78e81 # v5.5.1
        with:
          images: |
            ${{ env.REPO }}
          tags: |
            type=raw,value=${{ steps.export_tag.outputs.operator_tag }}-${{ steps.export_tag.outputs.commit_short }}
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@d70bba72b1f3fd22344832f00baa16ece964efeb # v3.3.0
      - name: Build and push image
        uses: docker/build-push-action@16ebe778df0e7752d2cfcbd924afdbbd89c1a755 # v6.6.1
        with:
          context: .
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          push: true
          cache-from: type=gha
          cache-to: type=gha,mode=max
          target: gke-operator
          file: test/e2e/Dockerfile.e2e
          build-args: |
            TAG=${{ steps.export_tag.outputs.operator_tag }}
            COMMITDATE=${{ steps.export_tag.outputs.commit_date }}
            COMMIT=${{ steps.export_tag.outputs.commit }}
      - name: Install Go
        uses: actions/setup-go@v5
        with:
          go-version: 1.22.x
      - uses: helm/kind-action@0025e74a8c7512023d06dc019c617aa3cf561fde # v1.10.0
        with:
          version: v0.23.0
          install_only: true
      - name: Create kind cluster
        run: make setup-kind
      - name: Set the value
        run: |
          GKE_PROJECT_ID="${{ env.GKE_PROJECT_ID }}"
          echo "GKE_PROJECT_ID=${GKE_PROJECT_ID}" >> $GITHUB_ENV
      - name: E2E tests
        env:
          GKE_CREDENTIALS: "${{ secrets.GKE_CREDENTIALS }}"
        run: make e2e-tests
      - name: Archive artifacts
        if: always()
        uses: actions/upload-artifact@v4.3.5
        with:
          name: ci-artifacts-${{ env.BRANCH }}
          path: _artifacts
          if-no-files-found: ignore
      - name: Send failed status to slack
        if: failure() && github.event_name == 'schedule'
        uses: slackapi/slack-github-action@v1.26.0
        with:
          payload: |
            {
              "blocks": [
                {
                  "type": "section",
                    "text": {
                      "type": "mrkdwn",
                      "text": "AKS Operator E2E test run failed."
                    },
                    "accessory": {
                      "type": "button",
                      "text": {
                        "type": "plain_text",
                        "text": ":github:",
                         "emoji": true
                        },
                      "url": "${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}"
                    }
                  }
              ]
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
          SLACK_WEBHOOK_TYPE: INCOMING_WEBHOOK
